server:
  port: 3000

spring:
  config:
    import: optional:file:./backend-spring/secrets/application-secrets.yml,optional:file:./backend-spring/secrets/application-secrets.properties
  datasource:
    url: ${DB_URL:}
    username: ${DB_USERNAME:}
    password: ${DB_PASSWORD:}
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        "[format_sql]": true
        jdbc:
          "[time_zone]": "UTC"
    open-in-view: false

app:
  jwt:
    secret: ${JWT_SECRET:dev-secret-please-change-me-0123456789-ABCDEFGHIJKLMNOPQRSTUVWXYZ}
    expiration: 86400000 # 24h em ms

# CORS permissivo similar ao Express
cors:
  allowed-origins: "*"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
  allowed-headers: "Authorization,Content-Type,Accept,Origin,X-Requested-With,Access-Control-Request-Method,Access-Control-Request-Headers"
  exposed-headers: "Content-Length,X-Foo,X-Bar"
  allow-credentials: true
  max-age: 86400

logging:
  # Nome do arquivo de log. Em dev, o backend costuma rodar dentro de `backend-spring/`,
  # ent√£o usamos ../ para gravar na raiz do projeto. Pode ser sobrescrito via LOG_FILE
  file:
    name: ${LOG_FILE:../backend.log}
  level:
    root: INFO
    "[org.springframework.web]": INFO
    "[com.example.backendspring]": DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg%n"
