{
    "name": "sistema-estoque",
    "version": "1.0.0",
    "description": "Sistema de GestÃ£o de Estoque com Electron, Angular e Node.js",
    "scripts": {
        "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install && cd ../electron && npm install",
        "build:frontend": "cd frontend && npm run build -- --configuration=production",
        "copy-frontend-to-backend": "node scripts/copy-frontend-to-backend.js",
        "prebuild:backend": "npm run build:frontend && npm run copy-frontend-to-backend",
        "build:backend": "cd backend-spring && mvn -DskipTests package",
        "check-env": "node scripts/check-env.js",
        "build:electron": "cd electron && npm run build",
        "build:all": "npm run build:backend && npm run build:frontend && npm run build:electron",
        "build:prod": "npx ts-node scripts/build-prod.ts",
        "check-deps": "node scripts/check-dependencies.js",
        "network-info": "node scripts/show-network-info.js",
        "serve:frontend": "node scripts/serve-frontend-prod.js",
        "extract:frontend": "node scripts/extract-frontend-from-electron.js",
        "prod:web": "concurrently \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000\" \"node scripts/wait-and-serve-frontend-prod.js\"",
        "dist": "npm run build:prod && cd electron && npm run dist",
        "dist:win": "npm run build:prod && cd electron && npm run dist:win",
        "dist:standalone": "npx ts-node scripts/build-standalone.ts",
        "dev": "node scripts/cleanup-selective.js && concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false\" \"node scripts/wait-and-start-frontend.js -- network\" \"node scripts/wait-and-start-electron.js\"",
        "dev:https": "concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false\" \"node scripts/wait-and-start-frontend.js -- https network\" \"node scripts/wait-and-start-electron.js\"",
        "dev:lan": "concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false -Dspring-boot.run.profiles=lan\" \"node scripts/wait-and-start-frontend.js -- network\" \"node scripts/wait-and-start-electron.js\"",
        "dev:lan:https": "concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false -Dspring-boot.run.profiles=lan\" \"node scripts/wait-and-start-frontend.js -- https network lan\" \"node scripts/wait-and-start-electron.js\"",
        "dev:fast": "FAST_FRONTEND_START=true concurrently \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000\" \"node scripts/wait-and-start-frontend.js\" \"node scripts/wait-and-start-electron.js\"",
        "dev:fast:https": "FAST_FRONTEND_START=true concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false\" \"node scripts/wait-and-start-frontend.js -- https network\" \"node scripts/wait-and-start-electron.js\"",
        "dev:fast:lan:https": "FAST_FRONTEND_START=true concurrently -k -s first \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000 --define spring.devtools.restart.enabled=false -Dspring-boot.run.profiles=lan\" \"node scripts/wait-and-start-frontend.js -- https network lan\" \"node scripts/wait-and-start-electron.js\"",
        "dev:network": "concurrently \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000\" \"node scripts/wait-and-start-frontend.js -- network\" \"node scripts/wait-and-start-electron.js\"",
        "dev:ip": "concurrently \"cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000\" \"node scripts/wait-and-start-frontend.js -- ip\" \"node scripts/wait-and-start-electron.js\"",
        "dev:sequential": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:electron:delayed\"",
        "dev:backend": "cd backend-spring && mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=3000",
        "dev:frontend": "cd frontend && npm start",
        "dev:electron:delayed": "node -e \"setTimeout(() => require('child_process').exec('cd electron && npm run dev'), 8000)\"",
        "start": "cd electron && npm start",
        "cert:generate": "node scripts/generate-dev-cert.js",
        "sync-db": "powershell -ExecutionPolicy Bypass -File ./scripts/sync-db.ps1",
        "validate-dist": "node ./scripts/validate-dist.js"
    },
    "keywords": [
        "electron",
        "angular",
        "nodejs",
        "estoque",
        "desktop"
    ],
    "author": "",
    "license": "ISC",
    "devDependencies": {
        "@types/node": "^24.1.0",
        "concurrently": "^8.2.2",
        "typescript": "^5.3.3"
    },
    "dependencies": {
        "axios": "^1.11.0",
        "minimist": "^1.2.8",
        "pg": "^8.16.3",
        "sqlite3": "^5.1.7"
    }
}
